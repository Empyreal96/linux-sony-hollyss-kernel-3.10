/*
 * Copyright(C) 2016 Foxconn International Holdings, Ltd. All rights reserved.
 */
#ifndef _CUST_BATTERY_METER_TABLE_H
#define _CUST_BATTERY_METER_TABLE_H

#include <mach/mt_typedefs.h>

// ============================================================
// define
// ============================================================
#define BAT_NTC_10 1
#define BAT_NTC_47 0

#if (BAT_NTC_10 == 1)
#define RBAT_PULL_UP_R             30000	// CORE-EL-UPDATE_BAT_TEMP_TBL-00*
#endif

#if (BAT_NTC_47 == 1)
#define RBAT_PULL_UP_R             61900	
#endif

#define RBAT_PULL_UP_VOLT          2800



// ============================================================
// ENUM
// ============================================================

// ============================================================
// structure
// ============================================================

// ============================================================
// typedef
// ============================================================
typedef struct _BATTERY_PROFILE_STRUC
{
    kal_int32 percentage;
    kal_int32 voltage;
} BATTERY_PROFILE_STRUC, *BATTERY_PROFILE_STRUC_P;

typedef struct _R_PROFILE_STRUC
{
    kal_int32 resistance; // Ohm
    kal_int32 voltage;
} R_PROFILE_STRUC, *R_PROFILE_STRUC_P;

typedef enum
{
    T1_0C,
    T2_25C,
    T3_50C
} PROFILE_TEMPERATURE;

// ============================================================
// External Variables
// ============================================================

// ============================================================
// External function
// ============================================================

// ============================================================
// <DOD, Battery_Voltage> Table
// ============================================================
// CORE-EL-UPDATE_BAT_TEMP_TBL-00*[
#if (BAT_NTC_10 == 1)
    BATT_TEMPERATURE Batt_Temperature_Table[] = {
		{-20,317500},
		{  0,108100},
		{  5,84200},
		{ 10,65900},
		{ 15,52000},
		{ 20,41300},
		{ 25,33000},
		{ 30,26500},
		{ 35,21400},
		{ 40,17400},
		{ 45,14200},
		{ 50,11700},
		{ 55,9700},
		{ 60,8000},
		{ 65,6700},
		{ 70,5600},
		{ 100,2100}
    };

	BATT_TEMPERATURE Batt_Temperature_Table_Accur[] = {
		{-200,317500},
		{  00,108100},
		{  50,84200},
		{ 100,65900},
		{ 150,52000},
		{ 200,41300},
		{ 250,33000},
		{ 300,26500},
		{ 350,21400},
		{ 400,17400},
		{ 450,14200},
		{ 500,11700},
		{ 550,9700},
		{ 600,8000},
		{ 650,6700},
		{ 700,5600},
		{ 1000,2100}
	};

#endif
// CORE-EL-UPDATE_BAT_TEMP_TBL-00*]

#if (BAT_NTC_47 == 1)
    BATT_TEMPERATURE Batt_Temperature_Table[] = {
        {-20,483954},
        {-15,360850},
        {-10,271697},
        { -5,206463},
        {  0,158214},
        {  5,122259},
        { 10,95227},
        { 15,74730},
        { 20,59065},
        { 25,47000},
        { 30,37643},
        { 35,30334},
        { 40,24591},
        { 45,20048},
        { 50,16433},
        { 55,13539},
        { 60,11210}        
    };
#endif

// T0 -10C
BATTERY_PROFILE_STRUC battery_profile_t0[] = {
	{0,	  4289},
	{3,	  4259},
	{5,	  4231},
	{8,	  4200},
	{10,	4170},
	{13,	4140},
	{16,	4115},
	{18,	4093},
	{21,	4073},
	{23,	4051},
	{26,	4025},
	{28,	4003},
	{31,	3984},
	{34,	3967},
	{36,	3951},
	{39,	3935},
	{41,	3918},
	{44,	3901},
	{47,	3884},
	{49,	3869},
	{52,	3856},
	{54,	3845},
	{57,	3835},
	{60,	3827},
	{62,	3819},
	{65,	3811},
	{67,	3806},
	{70,	3801},
	{72,	3796},
	{75,	3792},
	{78,	3789},
	{80,	3786},
	{83,	3782},
	{84,	3779},
	{86,	3778},
	{87,	3776},
	{88,	3775},
	{89,	3773},
	{90,	3771},
	{91,	3770},
	{91,	3769},
	{92,	3768},
	{93,	3768},
	{93,	3766},
	{94,	3765},
	{94,	3764},
	{94,	3763},
	{95,	3762},
	{95,	3761},
	{96,	3760},
	{96,	3759},
	{96,	3759},
	{96,	3757},
	{97,	3756},
	{97,	3756},
	{97,	3754},
	{97,	3754},
	{98,	3753},
	{98,	3752},
	{98,	3752},
	{98,	3750},
	{98,	3750},
	{99,	3749},
	{99,	3748},
	{99,	3747},
	{99,	3746},
	{99,	3745},
	{99,	3744},
	{99,	3744},
	{100,	3743},
	{100,	3742},
	{100,	3741},
	{100,	3740},
	{100,	3400}
}; /* 74 elements */
        
// T1 0C 
BATTERY_PROFILE_STRUC battery_profile_t1[] = {
	{0,	    4305},
	{2,	    4262},
	{4,	    4233},
	{6,	    4209},
	{8,	    4188},
	{10,	4166},
	{12,	4146},
	{14,	4127},
	{16,	4106},
	{18,	4090},
	{20,	4072},
	{22,	4051},
	{24,	4029},
	{26,	4008},
	{28,	3990},
	{30,	3974},
	{32,	3960},
	{34,	3946},
	{36,	3930},
	{38,	3913},
	{41,	3894},
	{43,	3877},
	{45,	3862},
	{47,	3850},
	{49,	3838},
	{51,	3830},
	{53,	3821},
	{55,	3814},
	{57,	3806},
	{59,	3800},
	{61,	3795},
	{63,	3791},
	{65,	3788},
	{67,	3785},
	{69,	3782},
	{71,	3780},
	{73,	3777},
	{75,	3773},
	{77,	3768},
	{79,	3762},
	{81,	3753},
	{83,	3742},
	{85,	3729},
	{87,	3714},
	{89,	3702},
	{91,	3694},
	{92,	3689},
	{93,	3687},
	{94,	3685},
	{95,	3684},
	{95,	3683},
	{96,	3681},
	{96,	3680},
	{97,	3678},
	{97,	3676},
	{97,	3674},
	{98,	3673},
	{98,	3671},
	{98,	3670},
	{98,	3667},
	{98,	3664},
	{99,	3661},
	{99,	3659},
	{99,	3655},
	{99,	3652},
	{99,	3649},
	{99,	3646},
	{99,	3643},
	{100,	3640},
	{100,	3636},
	{100,	3634},
	{100,	3631},
	{100,	3629},
	{100,	3400}
}; /* 74 elements */

// T2 25C
BATTERY_PROFILE_STRUC battery_profile_t2[] = {
	{0,	  4332},
	{2,	  4306},
	{4,	  4283},
	{6,	  4261},
	{7,	  4240},
	{9,	  4219},
	{11,	4198},
	{13,	4177},
	{15,	4158},
	{17,	4138},
	{19,	4118},
	{20,	4099},
	{22,	4082},
	{24,	4066},
	{26,	4046},
	{28,	4026},
	{30,	4007},
	{32,	3990},
	{33,	3975},
	{35,	3963},
	{37,	3950},
	{39,	3935},
	{41,	3919},
	{43,	3899},
	{45,	3880},
	{46,	3863},
	{48,	3851},
	{50,	3840},
	{52,	3831},
	{54,	3822},
	{56,	3815},
	{58,	3808},
	{59,	3802},
	{61,	3796},
	{63,	3790},
	{65,	3786},
	{67,	3781},
	{69,	3778},
	{71,	3774},
	{73,	3771},
	{74,	3766},
	{76,	3761},
	{78,	3752},
	{80,	3743},
	{82,	3733},
	{84,	3719},
	{86,	3702},
	{87,	3689},
	{89,	3685},
	{91,	3684},
	{93,	3681},
	{95,	3671},
	{97,	3617},
	{99,	3516},
	{100,	3396},
	{100,	3369},
	{100,	3356},
	{100,	3348},
	{100,	3341},
	{100,	3334},
	{100,	3327},
	{100,	3321},
	{100,	3317},
	{100,	3314},
	{100,	3312},
	{100,	3310},
	{100,	3307},
	{100,	3306},
	{100,	3304},
	{100,	3302},
	{100,	3299},
	{100,	3297},
	{100,	3295},
	{100,	3295}
}; /* 74 elements */

// T3 50C
BATTERY_PROFILE_STRUC battery_profile_t3[] = {
	{0,   4336},
	{2,	  4312},
	{4,	  4290},
	{6,	  4267},
	{7,	  4246},
	{9,	  4224},
	{11,	4203},
	{13,	4183},
	{15,	4162},
	{17,	4142},
	{18,	4122},
	{20,	4103},
	{22,	4085},
	{24,	4066},
	{26,	4049},
	{28,	4030},
	{30,	4012},
	{31,	3997},
	{33,	3981},
	{35,	3967},
	{37,	3953},
	{39,	3939},
	{41,	3926},
	{42,	3913},
	{44,	3894},
	{46,	3873},
	{48,	3855},
	{50,	3843},
	{52,	3834},
	{54,	3824},
	{55,	3817},
	{57,	3809},
	{59,	3802},
	{61,	3795},
	{63,	3790},
	{65,	3784},
	{66,	3780},
	{68,	3776},
	{70,	3770},
	{72,	3759},
	{74,	3750},
	{76,	3745},
	{77,	3739},
	{79,	3730},
	{81,	3722},
	{83,	3712},
	{85,	3696},
	{87,	3677},
	{89,	3671},
	{90,	3669},
	{92,	3666},
	{94,	3662},
	{96,	3630},
	{98,	3554},
	{100,	3436},
	{100,	3300},
	{100,	3276},
	{100,	3266},
	{100,	3261},
	{100,	3259},
	{100,	3258},
	{100,	3256},
	{100,	3254},
	{100,	3254},
	{100,	3254},
	{100,	3254},
	{100,	3253},
	{100,	3252},
	{100,	3252},
	{100,	3252},
	{100,	3251},
	{100,	3249},
	{100,	3247},
	{100,	3247}
}; /* 74 elements */

// battery profile for actual temperature. The size should be the same as T1, T2 and T3
BATTERY_PROFILE_STRUC battery_profile_temperature[] =
{
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0	, 0 },
	{0	, 0 },
	{0	, 0 },
	{0	, 0 }
};  /* 74 elements */

// ============================================================
// <Rbat, Battery_Voltage> Table
// ============================================================
// T0 -10C
R_PROFILE_STRUC r_profile_t0[] = { 
	{958,		4289},
	{958,		4259},
	{980,		4231},
	{990,		4200},
	{1013,	4170},
	{1050,	4140},
	{1093,	4115},
	{1120,	4093},
	{1138,	4073},
	{1150,	4051},
	{1158,	4025},
	{1168,	4003},
	{1180,	3984},
	{1195,	3967},
	{1208,	3951},
	{1218,	3935},
	{1225,	3918},
	{1225,	3901},
	{1228,	3884},
	{1233,	3869},
	{1240,	3856},
	{1253,	3845},
	{1263,	3835},
	{1275,	3827},
	{1290,	3819},
	{1300,	3811},
	{1315,	3806},
	{1335,	3801},
	{1358,	3796},
	{1385,	3792},
	{1413,	3789},
	{1443,	3786},
	{1455,	3782},
	{1450,	3779},
	{1448,	3778},
	{1443,	3776},
	{1440,	3775},
	{1435,	3773},
	{1430,	3771},
	{1428,	3770},
	{1425,	3769},
	{1420,	3768},
	{1420,	3768},
	{1415,	3766},
	{1418,	3765},
	{1410,	3764},
	{1410,	3763},
	{1405,	3762},
	{1405,	3761},
	{1403,	3760},
	{1400,	3759},
	{1400,	3759},
	{1393,	3757},
	{1390,	3756},
	{1393,	3756},
	{1388,	3754},
	{1388,	3754},
	{1385,	3753},
	{1383,	3752},
	{1385,	3752},
	{1378,	3750},
	{1378,	3750},
	{1375,	3749},
	{1373,	3748},
	{1368,	3747},
	{1368,	3746},
	{1365,	3745},
	{1360,	3744},
	{1365,	3744},
	{1360,	3743},
	{1358,	3742},
	{1358,	3741},
	{1355,	3740},
	{505,	3400}
}; /* 74 elements */

// T1 0C
R_PROFILE_STRUC r_profile_t1[] = { 
	{555,	4305},
	{555,	4262},
	{600,	4233},
	{610,	4209},
	{623,	4188},
	{623,	4166},
	{630,	4146},
	{638,	4127},
	{635,	4106},
	{650,	4090},
	{658,	4072},
	{670,	4051},
	{678,	4029},
	{688,	4008},
	{693,	3990},
	{700,	3974},
	{715,	3960},
	{725,	3946},
	{728,	3930},
	{730,	3913},
	{725,	3894},
	{723,	3877},
	{725,	3862},
	{730,	3850},
	{738,	3838},
	{750,	3830},
	{758,	3821},
	{773,	3814},
	{780,	3806},
	{795,	3800},
	{808,	3795},
	{825,	3791},
	{845,	3788},
	{870,	3785},
	{898,	3782},
	{930,	3780},
	{963,	3777},
	{985,	3773},
	{1010,	3768},
	{1035,	3762},
	{1058,	3753},
	{1083,	3742},
	{1110,	3729},
	{1138,	3714},
	{1175,	3702},
	{1225,	3694},
	{1223,	3689},
	{1218,	3687},
	{1215,	3685},
	{1215,	3684},
	{1210,	3683},
	{1203,	3681},
	{1200,	3680},
	{1195,	3678},
	{1195,	3676},
	{1188,	3674},
	{1185,	3673},
	{1180,	3671},
	{1178,	3670},
	{1170,	3667},
	{1163,	3664},
	{1155,	3661},
	{1153,	3659},
	{1138,	3655},
	{1135,	3652},
	{1125,	3649},
	{1118,	3646},
	{1115,	3643},
	{1105,	3640},
	{1093,	3636},
	{1088,	3634},
	{1083,	3631},
	{1073,	3629},
	{510,	3400}
}; /* 74 elements */

// T2 25C
R_PROFILE_STRUC r_profile_t2[] = { 
	{185,	4332},
	{185,	4306},
	{185,	4283},
	{185,	4261},
	{188,	4240},
	{193,	4219},
	{190,	4198},
	{193,	4177},
	{198,	4158},
	{198,	4138},
	{200,	4118},
	{203,	4099},
	{210,	4082},
	{213,	4066},
	{213,	4046},
	{220,	4026},
	{223,	4007},
	{225,	3990},
	{228,	3975},
	{235,	3963},
	{240,	3950},
	{240,	3935},
	{235,	3919},
	{223,	3899},
	{210,	3880},
	{193,	3863},
	{195,	3851},
	{193,	3840},
	{195,	3831},
	{193,	3822},
	{193,	3815},
	{193,	3808},
	{200,	3802},
	{208,	3796},
	{213,	3790},
	{218,	3786},
	{218,	3781},
	{218,	3778},
	{218,	3774},
	{218,	3771},
	{218,	3766},
	{223,	3761},
	{218,	3752},
	{215,	3743},
	{220,	3733},
	{225,	3719},
	{228,	3702},
	{225,	3689},
	{230,	3685},
	{253,	3684},
	{293,	3681},
	{333,	3671},
	{353,	3617},
	{413,	3516},
	{490,	3396},
	{425,	3369},
	{395,	3356},
	{373,	3348},
	{355,	3341},
	{338,	3334},
	{318,	3327},
	{308,	3321},
	{295,	3317},
	{290,	3314},
	{283,	3312},
	{278,	3310},
	{273,	3307},
	{268,	3306},
	{265,	3304},
	{260,	3302},
	{250,	3299},
	{248,	3297},
	{243,	3295},
	{240,	3295}
}; /* 74 elements */

// T3 50C
R_PROFILE_STRUC r_profile_t3[] = { 
	{143,	4336},
	{143,	4312},
	{145,	4290},
	{143,	4267},
	{145,	4246},
	{143,	4224},
	{145,	4203},
	{150,	4183},
	{150,	4162},
	{153,	4142},
	{153,	4122},
	{155,	4103},
	{160,	4085},
	{160,	4066},
	{163,	4049},
	{160,	4030},
	{165,	4012},
	{170,	3997},
	{168,	3981},
	{173,	3967},
	{178,	3953},
	{178,	3939},
	{185,	3926},
	{193,	3913},
	{183,	3894},
	{163,	3873},
	{153,	3855},
	{148,	3843},
	{150,	3834},
	{150,	3824},
	{155,	3817},
	{153,	3809},
	{158,	3802},
	{155,	3795},
	{160,	3790},
	{163,	3784},
	{168,	3780},
	{173,	3776},
	{170,	3770},
	{155,	3759},
	{150,	3750},
	{153,	3745},
	{160,	3739},
	{155,	3730},
	{158,	3722},
	{160,	3712},
	{158,	3696},
	{155,	3677},
	{155,	3671},
	{163,	3669},
	{168,	3666},
	{178,	3662},
	{175,	3630},
	{200,	3554},
	{230,	3436},
	{253,	3300},
	{193,	3276},
	{168,	3266},
	{158,	3261},
	{150,	3259},
	{148,	3258},
	{143,	3256},
	{138,	3254},
	{135,	3254},
	{135,	3254},
	{140,	3254},
	{138,	3253},
	{135,	3252},
	{138,	3252},
	{140,	3252},
	{138,	3251},
	{140,	3249},
	{135,	3247},
	{138,	3247}
}; /* 74 elements */

// r-table profile for actual temperature. The size should be the same as T1, T2 and T3
R_PROFILE_STRUC r_profile_temperature[] =
{
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0	, 0 },
	{0	, 0 },
	{0	, 0 },
	{0	, 0 }
};  /* 74 elements */

// ============================================================
// function prototype
// ============================================================
int fgauge_get_saddles(void);
BATTERY_PROFILE_STRUC_P fgauge_get_profile(kal_uint32 temperature);

int fgauge_get_saddles_r_table(void);
R_PROFILE_STRUC_P fgauge_get_profile_r_table(kal_uint32 temperature);

#endif	//#ifndef _CUST_BATTERY_METER_TABLE_H

